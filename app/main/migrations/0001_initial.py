# Generated by Django 4.2.10 on 2024-03-01 12:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccesUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acces_text', models.CharField(blank=True, max_length=200, unique=True, verbose_name='Название доступа')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Доступ',
                'verbose_name_plural': 'Доступы',
                'db_table': 'acces_user',
            },
        ),
        migrations.CreateModel(
            name='Constant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('constant_name', models.CharField(blank=True, max_length=200, unique=True, verbose_name='Наименование переменной')),
                ('constant_value', models.CharField(blank=True, max_length=200, verbose_name='Значение переменной')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Константа',
                'verbose_name_plural': 'Константы',
                'db_table': 'constant',
            },
        ),
        migrations.CreateModel(
            name='LevelUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_text', models.CharField(blank=True, max_length=200, unique=True, verbose_name='Уровень')),
                ('min_level_score', models.IntegerField(blank=True, unique=True, verbose_name='Минималтный процент уровня')),
                ('max_level_score', models.IntegerField(blank=True, unique=True, verbose_name='Максимальный процент уровня')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Уровень пользователя',
                'verbose_name_plural': 'Уровни пользователя',
                'db_table': 'level_user',
            },
        ),
        migrations.CreateModel(
            name='Quize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quize_name', models.CharField(blank=True, max_length=200, unique=True, verbose_name='Имя теста')),
                ('quize_description', models.CharField(blank=True, max_length=200, verbose_name='Описание теста')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
                'db_table': 'quize',
            },
        ),
        migrations.CreateModel(
            name='QuizeAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField(blank=True, verbose_name='Номер вопроса')),
                ('answer_number', models.IntegerField(blank=True, verbose_name='Номер ответа')),
                ('answer_text', models.CharField(blank=True, max_length=200, verbose_name='Текст ответа')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('id_quize', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='main.quize', verbose_name='ID теста')),
            ],
            options={
                'verbose_name': 'Ответ теста',
                'verbose_name_plural': 'Ответы теста',
                'db_table': 'quize_answer',
            },
        ),
        migrations.CreateModel(
            name='StatusQuize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_text', models.CharField(blank=True, max_length=200, unique=True, verbose_name='Статус')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Статус теста',
                'verbose_name_plural': 'Статусы теста',
                'db_table': 'status_quize',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_user_tg', models.BigIntegerField(blank=True, unique=True, verbose_name='ID пользователя в телеграм')),
                ('user_login', models.CharField(blank=True, max_length=200, unique=True, verbose_name='Лонин пользователя в телеграмм')),
                ('user_full_name', models.CharField(blank=True, max_length=200, verbose_name='Полное имя и фамилия из телеграмм')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('user_access', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.accesuser', verbose_name='Доступ пользователя')),
                ('user_level', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.leveluser', verbose_name='Уровень пользователя')),
            ],
            options={
                'verbose_name': 'Пользователь в telegram',
                'verbose_name_plural': 'Пользователи в telegram',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserQuize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField(blank=True, verbose_name='Номер вопроса')),
                ('id_answer_last', models.IntegerField(blank=True, verbose_name='ID последнего ответа пользователя')),
                ('quize_score', models.IntegerField(verbose_name='Количество баллов пользователя')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('id_quize', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.quize', verbose_name='ID теста')),
                ('id_user_tg', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.user', to_field='id_user_tg', verbose_name='ID пользователя в телеграмм')),
                ('quize_status', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.statusquize', verbose_name='ID статуса теста')),
            ],
            options={
                'verbose_name': 'Запущенный тест пользователя',
                'verbose_name_plural': 'Запущенные тесты пользователя',
                'db_table': 'user_quize',
            },
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField(blank=True, verbose_name='Номер вопроса')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('id_answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.quizeanswer', verbose_name='ID ответа')),
                ('id_user_quize', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.userquize', verbose_name='ID запушеного пользователем теста')),
                ('id_user_tg', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.user', to_field='id_user_tg', verbose_name='ID пользователя в телеграм')),
            ],
            options={
                'verbose_name': 'Ответ пользователя',
                'verbose_name_plural': 'Ответы пользователя',
                'db_table': 'user_answer',
            },
        ),
        migrations.CreateModel(
            name='QuizeTrueAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField(blank=True, verbose_name='Номер вопроса')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('id_answer', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='main.quizeanswer', verbose_name='ID ответа')),
                ('id_quize', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='main.quize', verbose_name='ID теста')),
            ],
            options={
                'verbose_name': 'Правильный вопрос для теста',
                'verbose_name_plural': 'Правильные вопросы для теста',
                'db_table': 'quize_true_answer',
            },
        ),
        migrations.CreateModel(
            name='QuizeQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField(blank=True, verbose_name='Номер вопроса')),
                ('question_text', models.CharField(blank=True, max_length=200, verbose_name='Текст вопроса')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('id_quize', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='main.quize', verbose_name='ID теста')),
            ],
            options={
                'verbose_name': 'Вопрос теста',
                'verbose_name_plural': 'Вопросы теста',
                'db_table': 'quize_question',
            },
        ),
    ]
